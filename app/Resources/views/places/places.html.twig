{% extends 'base.html.twig' %}

{% block body %}
    {{ parent() }}

    <div class="container eternity-form">
        <div class="section-title reg-header">
            <h3>Update your address</h3>

            <br>
            <p id="info"></p>

            <div class="list">
            {% for place in places %}
                <div data-id="{{ place.googleId }}" class="btn-group place-elem" role="group">
                    <button type="button" class="place-name btn btn-default">{{ place.formattedAddress }}</button>
                    <button type="button" class="place-delete btn btn-danger delete">Delete</button>
                </div>
            {% endfor %}
            </div>

            <div class="input-group">
                <input name="formatted_address" type="text" class="form-control" placeholder="Type your location...">
                <span class="input-group-btn place-padding-bottom">
                    <button id="my_location" class="btn btn-info">Check my location</button>
                    <button id="save_location" class="btn btn-default">Save location</button>
                </span>
            </div>
        </div>
    </div>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="{{ asset('bundles/app/css/place.css') }}" rel="stylesheet" />
{% endblock %}

{% block javascripts %}
{{ parent() }}

<script>
    var places = [];
    {% for place in places %}
    places.push({{ place|raw }});
    {% endfor %}

    console.log(places);

    var info = document.getElementById("info");
    var area = document.getElementsByClassName("section-title")[0];
    var list = document.getElementsByClassName("list")[0];

    area.addEventListener('click',function(e){
       if(e.target.id=='my_location'){
           getLocation();
       } else if(e.target.id=='save_location') {
           saveLocation();
       } else if(e.target.classList.contains('delete')){
           deleteLocation(e.target.parentNode.dataset.id);
       }
    });

    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition);
        } else {
            info.innerHTML = "Geolocation is not supported by this browser.";
        }
    }

    function showPosition(position) {
        $.ajax({
            url: "{{ path('ajax_geo_location') }}",
            method: "POST",
            data: {
                lat: position.coords.latitude,
                lon: position.coords.longitude
            },
            success: function(msg){
                $("#my_location").html('Position obtained');
                $("input[name=formatted_address]").val(msg['formatted_address']);
            }});
    }

    function saveLocation(){
        $.post('{{ path('ajax_geo_save') }}',
                JSON.stringify({formatted_address: $("input[name=formatted_address]").val()})
        ).done(function(res){

//                    console.log(places.filter(function(obj) {return obj.id == res.place_id}));

                    if(places.filter(function(obj) {return obj.id == res.place_id}).length){
                        return;
                    }

        places.push({'id':res.place_id,'addess':res.formatted_address});
        list.innerHTML += '<div data-id="'+res.place_id+'" class="btn-group place-elem" role="group">\
            <button type="button" class="place-name btn btn-default">'+res.formatted_address+'</button>\
            <button type="button" class="place-delete btn btn-danger delete">Delete</button>\
            </div>';
        });
    }

    function deleteLocation(googleId){
        var route = "{{ path('ajax_geo_delete',{'googleId':'PLACEHOLDER'}) }}";
        $.ajax({
            url: route.replace("PLACEHOLDER",googleId),
            method: "DELETE"
        });
        places = places.filter(function( obj ) {
            return obj.id !== googleId;
        });
        list.querySelector("[data-id='"+googleId+"']").outerHTML='';
    }
</script>
{% endblock %}